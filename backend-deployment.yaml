apiVersion: apps/v1
kind: Deployment
metadata:
  name: nestjs-oracle-backend-deployment
  labels:
    app: nestjs-oracle-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nestjs-oracle-backend
  template:
    metadata:
      labels:
        app: nestjs-oracle-backend
    spec:
      containers:
        - name: nestjs-oracle-backend-container
          image: nestjs-oracle-backend:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 3000
          env:
            - name: ORACLE_USER
              valueFrom:
                configMapKeyRef:
                  name: oracle-backend-config
                  key: ORACLE_USER
            - name: ORACLE_CONNECT_STRING
              valueFrom:
                configMapKeyRef:
                  name: oracle-backend-config
                  key: ORACLE_CONNECT_STRING
            - name: ORACLE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: oracle-backend-secret
                  key: ORACLE_PASSWORD
            - name: PORT
              value: "3000"
            - name: TNS_ADMIN # ¡MUY IMPORTANTE! Esta variable debe apuntar a la ruta donde se montará la wallet.
              value: "/opt/oracle/wallet/Wallet_CGTEST"
          volumeMounts: # <-- NUEVO: Monta el Secret como un volumen
            - name: oracle-wallet-volume
              mountPath: "/opt/oracle/wallet/Wallet_CGTEST" # Ruta dentro del contenedor donde se montará la wallet
              readOnly: true # Se recomienda que sea de solo lectura
      volumes: # <-- NUEVO: Define el volumen que usará el Secret
        - name: oracle-wallet-volume
          secret:
            secretName: oracle-backend-secret # Nombre del Secret que contiene los archivos de la wallet
            items: # Especifica qué claves del Secret se montarán como archivos y sus nombres
              - key: cwallet.sso
                path: cwallet.sso
              - key: ewallet.p12
                path: ewallet.p12
              - key: ewallet.pem
                path: ewallet.pem
              - key: keystore.jks
                path: keystore.jks
              - key: ojdbc.properties
                path: ojdbc.properties
              - key: sqlnet.ora
                path: sqlnet.ora
              - key: tnsnames.ora
                path: tnsnames.ora
              - key: truststore.jks
                path: truststore.jks